---
- name: Prune docker images, volumes and containers
  community.docker.docker_prune:
    containers: true
    images: true
    images_filters:
      dangling: false
    networks: true
    volumes: true
    builder_cache: true
  register: prune_docker

- name: Show image space reclaimed
  debug:
    msg: "Removed {{ prune_docker.images | length }} image layers and reclaimed {{ prune_docker.images_space_reclaimed|filesizeformat }} space."

- name: Cleanup journals
  command: journalctl --vacuum-time=1d
  changed_when: false
  register: cleanup_journal

- name: Show journal space reclaimed
  debug:
    msg: "{{ cleanup_journal.stderr }}"

- name: "Find old files in /var/tmp"
  find:
    paths:
      - "/var/tmp"
    age: 7d
    recurse: true
  register: old_files

# - name: Show old files
#   debug:
#     msg: "{{ old_files.files | map(attribute='path') | list }}"

- name: Remove old directories
  ansible.builtin.command:
    cmd: find /var/tmp -type d -mtime +7 -exec rm -rf {} \;
  when: old_files.files
  ignore_errors: true

- name: Remove old files
  ansible.builtin.command:
    cmd: find /var/tmp -type f -mtime +7 -exec rm -rf {} \;
  when: old_files.files
  ignore_errors: true

- name: Find old log files
  ansible.builtin.find:
    paths: /var/log
    patterns: "*.log.*,*.gz,*.1"
    recurse: yes
  register: log_files_to_delete

- name: Remove old log files
  ansible.builtin.file:
    path: "{{ item.path }}"
    state: absent
  with_items: "{{ log_files_to_delete.files }}"
  ignore_errors: true

- name: Find log files
  ansible.builtin.find:
    paths: /var/log
    patterns: "*.log"
    recurse: yes
  register: log_files_to_truncate

- name: Truncate log files
  community.general.filesize:
    path: "{{ item.path }}"
    size: 0
  with_items: "{{ log_files_to_truncate.files }}"
  ignore_errors: true
